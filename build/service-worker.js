"use strict";var precacheConfig=[["/index.html","936cdf0dfbf7fe20da55988d3d510e9c"],["/static/css/main.9116d07e.css","eea1dd452af96885bd5452ef2f0f9f95"],["/static/js/main.07f7a7c6.js","82cb87c60a8a9f8abccd3d747f8c33c3"],["/static/media/THERE - Black.e1bf5e40.png","e1bf5e40f31d89e8041cd7251f5c64a2"],["/static/media/aboutCover.b8754676.jpg","b87546767e387af9892b9d035dc41cfd"],["/static/media/aboutPhoto.7c936cc9.jpg","7c936cc9c3c7232218322b95414a5949"],["/static/media/backicon.b08fd880.png","b08fd880e32e4f5cbd7685bbe7541e91"],["/static/media/cameraCover.d601a206.jpg","d601a2060ad944ac2b404b29c9089969"],["/static/media/codeImage.c0e28503.jpg","c0e285037984d65e4bfd1af34f0727ad"],["/static/media/codingVideo.72b9de34.mp4","72b9de345bf6561286a5ebe6cba86ebb"],["/static/media/comingsoon.4dccfdf8.png","4dccfdf8411894cb47fe4d31b04f487f"],["/static/media/fb-icon.0ab13eb2.png","0ab13eb2d9c4acd069f53d1d4d22ecd3"],["/static/media/github-icon.aa06c782.png","aa06c782c897f8a78bd05b68183a3c4d"],["/static/media/icon_BlackAbut.6a0a3a89.svg","6a0a3a893d76143bced9d9dc2a1f912a"],["/static/media/icon_BlackCamera.7483bc06.svg","7483bc0622d2727cd06b334d8991d1b9"],["/static/media/icon_BlackCircle.699da0c0.svg","699da0c0ff546313ffcb85be8aa62872"],["/static/media/icon_BlackDev.a28cb7dd.svg","a28cb7dd165a086dea003ca19959a1f8"],["/static/media/icon_BlackK.a57d23af.svg","a57d23af1e9a85918404b3bd93b484c0"],["/static/media/qbkls.d808fef0.png","d808fef0da889f09742d3a074f356bc5"],["/static/media/videoTemp.fa89df19.mp4","fa89df193c75f01ee449c44517347ee8"],["/static/media/whiteCloseIcon.b7724dd5.svg","b7724dd5eec75c9ac53d5f067272e326"],["/static/media/whiteMenu.d166452c.svg","d166452cc5ec6cabde693b4cbee5f0a5"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],c=new URL(a,self.location),n=createCacheKey(c,hashParamName,t,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,c),e=urlsToCacheKeys.has(t));var n="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});